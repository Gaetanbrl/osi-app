-- Création de la base de donnée
CREATE DATABASE osi
  WITH OWNER = postgres
       ENCODING = 'UTF8'
       TABLESPACE = pg_default
       LC_COLLATE = 'fr_FR.UTF-8'
       LC_CTYPE = 'fr_FR.UTF-8'
       CONNECTION LIMIT = -1;

COMMENT ON DATABASE osi
  IS 'Base de données Osi, le démonstrateur OSIRISC';


-- Création des tables

DROP TABLE IF EXISTS fiche ;
CREATE TABLE fiche (id_fiche INTEGER NOT NULL,
acronyme_fiche VARCHAR(20),
composante_fiche VARCHAR(20),
theme_fiche VARCHAR(50),
objet_fiche VARCHAR(50),
description_fiche VARCHAR(200),
peremption_fiche INTEGER,
url_fiche TEXT,
mesure_fiche TEXT,
indication_fiche TEXT,
protocole_fiche TEXT,
PRIMARY KEY (id_fiche));
COMMENT ON COLUMN public.fiche.id_fiche IS 'Identifiant unique des fiches indicateurs : 0-99 pour les indicateurs de premier range, 100-199 pour les seconds rangs, 200+ pour les indices globaux';
COMMENT ON COLUMN public.fiche.acronyme_fiche IS 'L''acronyme se décompose en COMPOSANTE-INDICATEUR-DONNEE.';
COMMENT ON COLUMN public.fiche.composante_fiche IS 'Décomposition systémique de la vulnérabilité.';
COMMENT ON COLUMN public.fiche.theme_fiche IS 'Familles d''indicateurs par composantes.';
COMMENT ON COLUMN public.fiche.objet_fiche IS 'Ce sur quoi porte la donnée.';
COMMENT ON COLUMN public.fiche.description_fiche IS 'Titre complet de l''indicateur.';
COMMENT ON COLUMN public.fiche.peremption_fiche IS 'Nombre d''années au delà duquel la donnée doit être mise à jour.';
COMMENT ON COLUMN public.fiche.url_fiche IS 'Lien vers métadonnées externes.';
COMMENT ON COLUMN public.fiche.mesure_fiche IS 'Ce que l''indicateur mesure.';
COMMENT ON COLUMN public.fiche.indication_fiche IS 'Ce que l''indicateur indique.';
COMMENT ON COLUMN public.fiche.protocole_fiche IS 'Méthode employée pour produire l''indicateur.';
COMMENT ON TABLE public.fiche  IS 'Liste des indicateurs du projet OSIRISC.';

DROP TABLE IF EXISTS indicateur ;
CREATE TABLE indicateur (id_indicateur BIGINT NOT NULL,
date_indicateur INTEGER,
score_indicateur INTEGER,
source_indicateur TEXT,
id_fiche INTEGER,
id_car200 VARCHAR(20),
PRIMARY KEY (id_indicateur));
COMMENT ON COLUMN public.indicateur.id_indicateur IS '';
COMMENT ON COLUMN public.indicateur.date_indicateur IS 'Date de référence de la donnée source';
COMMENT ON COLUMN public.indicateur.score_indicateur IS 'Indicateur calibré selon une échelle de 1 à 5';

DROP TABLE IF EXISTS car200 ;
CREATE TABLE car200 (id_car200 VARCHAR(20) NOT NULL,
id_commune VARCHAR(20),
id_inspire VARCHAR(20),
id_epci VARCHAR(20),
PRIMARY KEY (id_car200));

DROP TABLE IF EXISTS commune ;
CREATE TABLE commune (id_commune VARCHAR(20) NOT NULL,
nom_commune VARCHAR(50),
PRIMARY KEY (id_commune));

DROP TABLE IF EXISTS inspire ;
CREATE TABLE inspire (id_inspire VARCHAR(20) NOT NULL,
PRIMARY KEY (id_inspire));

DROP TABLE IF EXISTS epci ;
CREATE TABLE epci (id_epci VARCHAR(20) NOT NULL,
nom_epci_car200 VARCHAR(50),
PRIMARY KEY (id_epci));

ALTER TABLE indicateur ADD CONSTRAINT FK_indicateur_id_fiche FOREIGN KEY (id_fiche) REFERENCES fiche (id_fiche);

ALTER TABLE indicateur ADD CONSTRAINT FK_indicateur_id_car200 FOREIGN KEY (id_car200) REFERENCES car200 (id_car200);
ALTER TABLE car200 ADD CONSTRAINT FK_car200_id_commune FOREIGN KEY (id_commune) REFERENCES commune (id_commune);
ALTER TABLE car200 ADD CONSTRAINT FK_car200_id_inspire FOREIGN KEY (id_inspire) REFERENCES inspire (id_inspire);
ALTER TABLE car200 ADD CONSTRAINT FK_car200_id_epci FOREIGN KEY (id_epci) REFERENCES epci (id_epci);


-- Peuplement des tables ( /!\ Il faut adapter le chemin /tmp/ à la localisation des fichers sources)

COPY inspire(id_inspire) 
FROM '/tmp/inspire.csv'
DELIMITER ';' 
CSV HEADER;

COPY epci(id_epci,nom_epci) 
FROM '/tmp/epci.csv'
DELIMITER ';' 
CSV HEADER;

COPY commune(id_commune,nom_commune) 
FROM '/tmp/commune.csv'
DELIMITER ';' 
CSV HEADER;

COPY car200(id_car200,id_commune,id_inspire,id_epci) 
FROM '/tmp/car200.csv'
DELIMITER ';' 
CSV HEADER;

COPY fiche(id_fiche,acronyme_fiche,composante_fiche,theme_fiche,objet_fiche,description_fiche,peremption_fiche,url_fiche,mesure_fiche,indication_fiche,protocole_fiche)
FROM '/tmp/fiche.csv'
DELIMITER ';' 
CSV HEADER;

COPY indicateur(id_indicateur,date_indicateur,score_indicateur,source_indicateur,id_fiche,id_car200) 
FROM '/tmp/indic15.csv'
DELIMITER ';' 
CSV HEADER;




-- ligne de commande ogr2ogr pour charger les GEOJSON sur la base (adapter les paramètres de connection à postgres puis le chemin d'accès des fichers)

ogr2ogr -f "PostgreSQL" PG:"host=localhost port=5432 dbname=osi user=postgres password=postgres" /.../CCPLON_CAR200.geojson -nln geom_car200
ogr2ogr -f "PostgreSQL" PG:"host=localhost port=5432 dbname=osi user=postgres password=postgres" /.../CCPLON_COM.geojson -nln geom_com
ogr2ogr -f "PostgreSQL" PG:"host=localhost port=5432 dbname=osi user=postgres password=postgres" /.../CCPLON_EPCI.geojson -nln geom_epci
ogr2ogr -f "PostgreSQL" PG:"host=localhost port=5432 dbname=osi user=postgres password=postgres" /.../OSI_EPCI.geojson -nln geom_osi
